{"version":3,"sources":["components/ApiClient/ApiClient.js","components/ApiClientContext/ApiClientContext.js","components/textTrim/textTrim.js","components/MovieListItem/MovieListItem.js","components/ErrorMessage/ErrorMessage.js","components/MovieList/MovieList.js","components/InputField/InputField.js","components/Header/Header.js","index.js"],"names":["ApiClient","_ApiKey","_ApiBase","this","_PosterUrlBase","a","fetch","result","ok","Error","status","json","sessionId","localStorage","getItem","url","movieId","rating","JSON","stringify","value","method","headers","body","React","createContext","ApiClientProvider","Provider","ApiClientConsumer","Consumer","textTrim","text","number","length","newText","match","RegExp","MovieListItem","state","updatedRating","setState","props","title","id","overview","releaseDate","posterPath","genreIds","voteAverage","onMovieRate","genres","movieGenres","forEach","el","genre","push","name","hoverable","bodyStyle","padding","className","alt","src","Date","format","getDate","getYear","map","count","onChange","onRatingUpdate","Component","defaultProps","ErrorMessage","onCloseHandle","message","description","type","closable","onClose","MovieList","pageSize","movies","ratedMovies","loading","error","numberOfPages","numberOfRatedPages","tab","page","onPageSwitch","ratings","movie","movieCards","xs","sm","release_date","poster_path","genre_ids","vote_average","ratedMovieCards","visibleMovies","slice","visibleRatedMovies","films","gutter","errorMessage","ratedFilms","size","wrapperClassName","spinning","defaultCurrent","total","InputField","onInputChange","searchInput","Search","Input","event","target","Header","TabPane","Tabs","onTabChange","defaultActiveKey","activeKey","centered","App","moviesFetch","debounce","getMovies","then","results","onErrorHandle","catch","input","newTab","ratedMoviesFetch","rateMovie","getRatedMovies","componentDidMount","createGuestSession","response","setItem","guest_session_id","getGenres","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9555848.chunk.js","sourcesContent":["/* eslint-disable no-return-await */\n/* eslint-disable no-underscore-dangle */\nexport default class ApiClient {\n  _ApiKey = '384b86bc035ceb5247a1a9fc94fec8e0';\n\n  _ApiBase = `https://api.themoviedb.org/3/search/movie?api_key=${this._ApiKey}&language=en-US`;\n\n  _PosterUrlBase = 'https://image.tmdb.org/t/p/original';\n\n  async createGuestSession() {\n    const result = await fetch(`https://api.themoviedb.org/3/authentication/guest_session/new?api_key=${this._ApiKey}`);\n    if (!result.ok) {\n      throw new Error(`Couldn't create a guest session ${result.status}`);\n    }\n    return await result.json();\n  }\n\n  async getRatedMovies() {\n    const sessionId = localStorage.getItem('sessionId');\n    const result = await fetch(\n      `https://api.themoviedb.org/3/guest_session/${sessionId}/rated/movies?api_key=${this._ApiKey}&language=en-US&sort_by=created_at.asc`\n    );\n    if (!result.ok) {\n      throw new Error(`Couldn't fetch rated movies ${result.status}`);\n    }\n    return await result.json();\n  }\n\n  async getMovies(url) {\n    const result = await fetch(`${this._ApiBase}&query=${url}`);\n    if (!result.ok) {\n      throw new Error(`Couldn't fetch ${url}, received status ${result.status}`);\n    }\n    return await result.json();\n  }\n\n  async rateMovie(movieId, rating) {\n    const sessionId = localStorage.getItem('sessionId');\n    const json = JSON.stringify({ value: rating });\n    const result = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/rating?api_key=${this._ApiKey}&guest_session_id=${sessionId}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: json,\n      }\n    );\n    return await result.json();\n  }\n\n  async getGenres() {\n    const result = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this._ApiKey}&language=en-US`);\n    if (!result.ok) {\n      throw new Error(`Couldn't fetch genres, received status ${result.status}`);\n    }\n    return await result.json();\n  }\n}\n","import React from 'react';\n\nconst { Provider: ApiClientProvider, Consumer: ApiClientConsumer } = React.createContext();\n\nexport { ApiClientProvider, ApiClientConsumer };\n","function textTrim(text, number) {\n  if (text.length < number) {\n    return text;\n  }\n  let newText = (text.match(new RegExp(`.{${number}}\\\\S*`)) || [text])[0];\n  newText += '...';\n  return newText;\n}\nexport default textTrim;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable prefer-template */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport { Card, Rate } from 'antd';\nimport { getDate, format, getYear } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport ApiClient from '../ApiClient/ApiClient';\nimport textTrim from '../textTrim/textTrim';\nimport { ApiClientConsumer } from '../ApiClientContext/ApiClientContext';\n\nimport './MovieListItem.css';\n\nexport default class MovieListItem extends Component {\n  ApiClient = new ApiClient();\n\n  state = {\n    updatedRating: null,\n  };\n\n  onRatingUpdate(value) {\n    this.setState({ updatedRating: value });\n  }\n\n  render() {\n    const { title, id, overview, releaseDate, posterPath, genreIds, voteAverage, rating, onMovieRate } = this.props;\n    const { updatedRating } = this.state;\n    const _posterUrl = 'https://image.tmdb.org/t/p/original';\n    return (\n      <ApiClientConsumer>\n        {(genres) => {\n          const movieGenres = [];\n          genreIds.forEach((el) => {\n            genres.forEach((genre) => {\n              if (el === genre.id) {\n                movieGenres.push(genre.name);\n              }\n            });\n          });\n          return (\n            <Card key={id} hoverable bodyStyle={{ padding: '0' }}>\n              <div className=\"movie-card__content\">\n                {posterPath === null ? (\n                  <img className=\"movie-card__poster\" alt=\"no poster\" src=\"../../assets/no_poster.jpg\" />\n                ) : (\n                  <img className=\"movie-card__poster\" alt=\"movie poster\" src={_posterUrl + posterPath} />\n                )}\n                <div className=\"movie-card__description\">\n                  <p className=\"title\">{title}</p>\n                  <div\n                    className={\n                      voteAverage < 3\n                        ? 'user-rating low'\n                        : voteAverage < 5\n                        ? 'user-rating average'\n                        : voteAverage < 7\n                        ? 'user-rating good'\n                        : 'user-rating excellent'\n                    }\n                  >\n                    {voteAverage}\n                  </div>\n                  <p className=\"date\">\n                    {new Date(releaseDate)\n                      ? `${format(new Date(releaseDate), 'MMMM')} ${getDate(new Date(releaseDate))}, ${getYear(\n                          new Date(releaseDate)\n                        )}`\n                      : null}\n                  </p>\n                  <div className=\"genres\">\n                    {movieGenres.map((el) => (\n                      <div className=\"genre\" key={el}>\n                        {el}\n                      </div>\n                    ))}\n                  </div>\n                  <p className=\"description\">{textTrim(overview, 200)}</p>\n                  <Rate\n                    className=\"movie-rating\"\n                    count={10}\n                    value={updatedRating || rating}\n                    onChange={(value) => {\n                      if (updatedRating !== value && rating !== value) {\n                        this.onRatingUpdate(value);\n                        onMovieRate(id, value);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </Card>\n          );\n        }}\n      </ApiClientConsumer>\n    );\n  }\n}\n\nMovieListItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n  overview: PropTypes.string,\n  releaseDate: PropTypes.string,\n  posterPath: PropTypes.string,\n  voteAverage: PropTypes.number,\n  rating: PropTypes.number,\n  onMovieRate: PropTypes.func,\n  genreIds: PropTypes.arrayOf(PropTypes.number),\n};\n\nMovieListItem.defaultProps = {\n  title: '',\n  id: 0,\n  overview: '',\n  releaseDate: '',\n  posterPath: '',\n  voteAverage: 0,\n  rating: 0,\n  onMovieRate: () => {},\n  genreIds: [],\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Alert } from 'antd';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\n\nconst ErrorMessage = ({ onCloseHandle, message }) => (\n  <Alert message=\"Error\" description={message} type=\"error\" closable onClose={onCloseHandle} />\n);\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n  onCloseHandle: PropTypes.func,\n};\n\nErrorMessage.defaultProps = {\n  message: '',\n  onCloseHandle: () => {},\n};\n\nexport default ErrorMessage;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport { Col, Row, Spin, Pagination } from 'antd';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport MovieListItem from '../MovieListItem/MovieListItem';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport './MovieList.css';\n\nexport default class MovieList extends Component {\n  state = {\n    pageSize: 6,\n  };\n\n  render() {\n    const {\n      movies,\n      ratedMovies,\n      loading,\n      error,\n      message,\n      numberOfPages,\n      numberOfRatedPages,\n      onCloseHandle,\n      tab,\n      onMovieRate,\n      page,\n      onPageSwitch,\n    } = this.props;\n    const { pageSize } = this.state;\n\n    const ratings = {};\n\n    ratedMovies.forEach((movie) => {\n      ratings[movie.id] = movie.rating;\n    });\n\n    const movieCards = movies.map((movie) => (\n      <Col xs={24} sm={12} key={movie.id} className=\"card-column\">\n        <MovieListItem\n          title={movie.title}\n          id={movie.id}\n          overview={movie.overview}\n          releaseDate={movie.release_date}\n          posterPath={movie.poster_path}\n          genreIds={movie.genre_ids}\n          voteAverage={movie.vote_average}\n          rating={ratings[movie.id] ? ratings[movie.id] : 0}\n          onMovieRate={onMovieRate}\n        />\n      </Col>\n    ));\n\n    const ratedMovieCards = ratedMovies.map((movie) => (\n      <Col xs={24} sm={12} key={movie.id} className=\"card-column\">\n        <MovieListItem\n          title={movie.title}\n          id={movie.id}\n          overview={movie.overview}\n          releaseDate={movie.release_date}\n          posterPath={movie.poster_path}\n          genreIds={movie.genre_ids}\n          voteAverage={movie.vote_average}\n          rating={movie.rating}\n          onMovieRate={onMovieRate}\n        />\n      </Col>\n    ));\n\n    const visibleMovies = movieCards.slice(page * pageSize - pageSize, page * pageSize);\n\n    const visibleRatedMovies = ratedMovieCards.slice(page * pageSize - pageSize, page * pageSize);\n\n    const films = !loading && !error && tab === '1' ? <Row gutter={[16, 16]}>{visibleMovies}</Row> : null;\n\n    const errorMessage = error ? <ErrorMessage onCloseHandle={onCloseHandle} message={message} /> : null;\n\n    const ratedFilms = !loading && !error && tab === '2' ? <Row gutter={[16, 16]}>{visibleRatedMovies}</Row> : null;\n\n    return (\n      <div className=\"movie-list\">\n        <Spin size=\"large\" wrapperClassName=\"spin-loader\" spinning={loading}>\n          <div className=\"site-card-wrapper\">\n            {errorMessage}\n            {films}\n            {ratedFilms}\n          </div>\n        </Spin>\n        {!loading && !error ? (\n          <Pagination\n            className=\"movie-pagination\"\n            defaultCurrent={1}\n            total={tab === '1' ? numberOfPages : numberOfRatedPages}\n            pageSize={pageSize}\n            onChange={onPageSwitch}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  message: PropTypes.string,\n  numberOfPages: PropTypes.number,\n  page: PropTypes.number,\n  tab: PropTypes.string,\n  numberOfRatedPages: PropTypes.number,\n  onMovieRate: PropTypes.func,\n  onCloseHandle: PropTypes.func,\n  onPageSwitch: PropTypes.func,\n  movies: PropTypes.arrayOf(PropTypes.object),\n  ratedMovies: PropTypes.arrayOf(PropTypes.object),\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n};\n\nMovieList.defaultProps = {\n  message: '',\n  numberOfPages: 1,\n  page: 1,\n  tab: '1',\n  numberOfRatedPages: [],\n  onMovieRate: () => {},\n  onCloseHandle: () => {},\n  onPageSwitch: () => {},\n  movies: [],\n  ratedMovies: [],\n  loading: true,\n  error: false,\n};\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\n\nexport default class InputField extends Component {\n  render() {\n    const { onInputChange, searchInput, tab } = this.props;\n    const { Search } = Input;\n    return tab === '1' ? (\n      <Search\n        value={searchInput}\n        size=\"large\"\n        onChange={(event) => {\n          onInputChange(event.target.value);\n        }}\n      />\n    ) : null;\n  }\n}\n\nInputField.propTypes = {\n  onInputChange: PropTypes.func,\n  searchInput: PropTypes.string,\n  tab: PropTypes.string,\n};\n\nInputField.defaultProps = {\n  onInputChange: () => {},\n  searchInput: '',\n  tab: '1',\n};\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs } from 'antd';\n\nexport default class Header extends Component {\n  render() {\n    const { TabPane } = Tabs;\n    const { onTabChange, tab } = this.props;\n\n    return (\n      <Tabs\n        defaultActiveKey=\"1\"\n        activeKey={tab}\n        centered\n        onChange={(activeKey) => {\n          if (activeKey !== tab) {\n            onTabChange(activeKey);\n          }\n        }}\n      >\n        <TabPane tab=\"Search\" key=\"1\" />\n        <TabPane tab=\"Rated\" key=\"2\" />\n      </Tabs>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onTabChange: PropTypes.func,\n  tab: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  onTabChange: () => {},\n  tab: '1',\n};\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable object-shorthand */\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport debounce from 'lodash.debounce';\nimport ApiClient from './components/ApiClient/ApiClient';\nimport { ApiClientProvider } from './components/ApiClientContext/ApiClientContext';\nimport MovieList from './components/MovieList/MovieList';\nimport InputField from './components/InputField/InputField';\nimport Header from './components/Header/Header';\nimport './index.css';\n\nclass App extends Component {\n  ApiClient = new ApiClient();\n\n  state = {\n    movies: [],\n    ratedMovies: [],\n    numberOfPages: 1,\n    numberOfRatedPages: 1,\n    loading: true,\n    error: false,\n    message: '',\n    searchInput: 'return',\n    tab: '1',\n    page: 1,\n    genres: [],\n  };\n\n  moviesFetch = debounce(() => {\n    this.setState({\n      loading: true,\n    });\n    if (this.state.searchInput !== '') {\n      this.ApiClient.getMovies(this.state.searchInput)\n        .then((movies) => {\n          if (movies.results.length !== 0) {\n            this.setState({\n              movies: movies.results,\n              numberOfPages: movies.results.length,\n              loading: false,\n              error: false,\n            });\n          } else {\n            this.setState({\n              message: 'No results',\n            });\n            this.onErrorHandle();\n          }\n        })\n        .catch(this.onErrorHandle);\n    } else {\n      this.onInputChange('return');\n    }\n  }, 700);\n\n  onErrorHandle = (message) => {\n    this.setState({\n      error: true,\n      loading: false,\n      message,\n    });\n  };\n\n  onCloseHandle = () => {\n    if (this.state.movies.length !== 0) {\n      this.setState({\n        error: false,\n        page: 1,\n        tab: '1',\n      });\n    } else {\n      this.setState({\n        error: false,\n        page: 1,\n        searchInput: 'return',\n        tab: '1',\n      });\n      this.moviesFetch();\n    }\n  };\n\n  onInputChange = (input) => {\n    this.setState({\n      searchInput: input,\n    });\n    this.moviesFetch();\n  };\n\n  onTabChange = (newTab) => {\n    this.setState({ tab: newTab });\n    if (this.state.ratedMovies.length === 0 && newTab === '2') {\n      this.onErrorHandle('You didnt rate any movies yet');\n    } else {\n      this.setState({\n        loading: true,\n        page: 1,\n      });\n      this.ratedMoviesFetch();\n      if (newTab === '1') {\n        this.moviesFetch();\n      }\n    }\n  };\n\n  onPageSwitch = (page) => {\n    this.ratedMoviesFetch();\n    this.setState({ page });\n  };\n\n  onMovieRate = debounce((id, value) => {\n    this.ApiClient.rateMovie(id, value);\n  }, 500);\n\n  ratedMoviesFetch = async () => {\n    await this.ApiClient.getRatedMovies()\n      .then((ratedMovies) => {\n        if (ratedMovies.results.length !== 0) {\n          this.setState({\n            ratedMovies: ratedMovies.results,\n            numberOfRatedPages: ratedMovies.results.length,\n            loading: false,\n          });\n        }\n      })\n      .catch(this.onErrorHandle);\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem('sessionId') === null) {\n      this.ApiClient.createGuestSession()\n        .then((response) => {\n          localStorage.setItem('sessionId', response.guest_session_id);\n        })\n        .then(() => this.ratedMoviesFetch())\n        .then(() => this.moviesFetch());\n    } else {\n      this.ratedMoviesFetch();\n      this.moviesFetch();\n    }\n    this.ApiClient.getGenres().then((result) => {\n      this.setState({ genres: result.genres });\n    });\n  };\n\n  render() {\n    const {\n      movies,\n      ratedMovies,\n      loading,\n      error,\n      numberOfPages,\n      numberOfRatedPages,\n      message,\n      searchInput,\n      tab,\n      page,\n      genres,\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <ApiClientProvider value={genres}>\n          <Header onTabChange={this.onTabChange} tab={tab} />\n          <InputField onInputChange={this.onInputChange} searchInput={searchInput} tab={tab} />\n          <MovieList\n            movies={movies}\n            ratedMovies={ratedMovies}\n            loading={loading}\n            error={error}\n            message={message}\n            numberOfPages={numberOfPages}\n            numberOfRatedPages={numberOfRatedPages}\n            onCloseHandle={this.onCloseHandle}\n            tab={tab}\n            onMovieRate={this.onMovieRate}\n            page={page}\n            onPageSwitch={this.onPageSwitch}\n          />\n        </ApiClientProvider>\n      </div>\n    );\n  }\n}\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}